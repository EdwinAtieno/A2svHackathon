# Generated by Django 4.2.6 on 2023-10-28 15:57

import apps.users.models
import apps.users.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('phone_number', models.CharField(max_length=20, unique=True, validators=[apps.users.validators.phone_number_validator], verbose_name='Phone Number')),
                ('country', models.CharField(max_length=255, verbose_name='country')),
                ('email', models.CharField(max_length=255, unique=True, verbose_name='Email Address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_available', models.BooleanField(default=True, verbose_name='available')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', apps.users.models.UserManager()),
            ],
        ),
    ]
